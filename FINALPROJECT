You are given an array A of length N consisting of positive integers.
In one move, you are allowed to choose any index i (1 <= i <= N) from this array and set A, to (A, - 1).
You can perform any number of moves, and it doesn't matter if A, becomes zero or a negative number at some point.
After your moves, you want to build K houses on this array. You can build a house at index i where (6 <= i <= N- 5) if and only if A; is strictly greater than the five elements after it and the five elements before it.
Find the minimum number of moves required to build exactly K houses.
Notes:
• It is guaranteed that there is at least one valid way to build the house.
• It is given that all arrays follow 1-based indexing
Input Format
The first line contains an integer, N, denoting the number of elements in A.
The next line contains an integer, K, denoting the number of houses to build
Each line i of the N subsequent lines (where 0 ≤ i <
N) contains an integer describing A[i]
Constraints
11 <= N <= 1000
1 <= K <= 100
1 <= A[i] <= 10^6
Sample Test Cases
Case 1
12
1
5
5
5
5
5
4
5
5
5
5
5
5
output:
9
Explanation:
N=12
K= 1
A =[5, 5, 5, 5, 5, 4, 5, 5 ,5,5, 5,5]
We need to build 1 house (K =1) by modifying the
array.
The best option is to place a house at A[7I = 5
(1-based index), as it can be made the highes.
To do so, we decrease the surnounding numbens
accordingly.
The final modified array is:
[5, 4, 4, 4, 4, 4, 5, 4, 4, 4 ,4, 4]
Total moves required: 9

Case 2
Input:
13
1
1
2
3
4
5
6
5
4
3
2
1
10
11
Output:
0
Explanation:
N = 13
K = 1
A - [1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1, 10, 11] We need to build 1 house (K = 1) .
The number 6 at index 6 (1-based) is already the highest among its five neighbors on both sides.
Since no changes are needed, the minimum moves nequired: 0.
Case 3
Input:
17
2
5
5
5
5
5
7
10
10
10
10
10
8
5
5
5
5
12
Output:
25
Explanation:
N = 17
K = 2
A = [5, 5, 5, 5, 5, 7, 10, 10, 10, 10, 10, 8, 5, 5, 5, 5, 12]
Explanation:
We need to build 2 houses (K=2).
We modify the array to create two peaks where
houses can be placed.
The required modifications ensure valid peaks while
minimizing the number of moves.
Total moves required: 25.
give python code for the above question without comments in this format 
import sys

# def GetAnswer(N, K, A):
#   # write your code here

def main():
    N = int(sys.stdin.readline().strip())
    K = int(sys.stdin.readline().strip())
    A = []
    for _ in range(N):
        A.append(int(sys.stdin.readline().strip()))

    result = GetAnswer(N, K, A)
    print(result)

if __name__ == "__main__":
    main()
make sure all the test cases run
